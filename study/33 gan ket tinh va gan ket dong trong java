- Gắn kết tĩnh và Gắn kết động (Dynamic Binding) trong Java

- Gắn kết tĩnh và Gắn kết động (Dynamic Binding) trong Java

+ Binding (gắn kết) là kết nối một lời gọi phương thức tới thân phương thức.
Có hai kiểu binding là: Static Binding hay early binding (gắn kết tĩnh) và Dynamic Binding hay late biding (gắn kết động)

+ Trước khi đi vào thảo luận về Binding, chúng ta cần làm rõ Type là gì:

1. Biến có một kiểu, nó có thể là kiểu gốc hoặc kiểu khác (không phải là kiểu gốc).

int data=30;  
Ở đây, biến data là một kiểu int.

2. Tham chiếu có một kiểu

class Dog{
	public static void main(String args[]){
		Dog d1;//O day, d1 la kieu cua Dog
	}
}
3. Đối tượng có một kiểu. Đối tượng là một instance (sự thể hiện) của lớp Java cụ thể, nhưng nó cũng là một instance của lớp cha.

class Animal{}

class Dog extends Animal{
	public static void main(String args[]){
		Dog d1=new Dog();
	}
}

Ở đây, d1 là một sự thể hiện của lớp Dog, nhưng nó cũng là một sự thể hiện của Animal.

- Gắn kết tĩnh (Static Binding) trong Java

+ Khi kiểu của đối tượng được quyết định tại compile time (bởi Compiler) thì đó là static binding.
Nếu có bất cứ phương thức private, final hoặc static nào trong một lớp, thì đó là gắn kết tĩnh.
Do đó, không thể có chuyện ghi đè (overloading) kết quả đối với lập trình hướng đối tượng trong Static binding

+ Ví dụ về Static Binding

class Dog{  
	private void eat(){
		System.out.println("dog dang an...");
	}  

	public static void main(String args[]){  
		Dog d1=new Dog();  
		d1.eat();  
	}  
}   

- Gắn kết động (Dynamic Binding) trong Java

+ Khi kiểu của đối tượng được quyết định tại runtime thì đó là gắn kết động (Dynamic Binding).

+ Ví dụ về Dynamic Binding

class Animal{  
	void eat(){
		System.out.println("animal dang an...");
	}  
}  
  
class Dog extends Animal{  
	void eat(){
		System.out.println("dog dang an...");
	}  

	public static void main(String args[]){  
		Animal a=new Dog();  
		a.eat();  
	}  
}  

+ Trong ví dụ trên, kiểu đối tượng không thể được quyết định bởi Compiler, bởi vì sự thể hiện của Dog cũng là một sự thể hiện của Animal.
Vì thế Compiler không biết kiểu nào của nó, chỉ biết đến kiểu cơ sở.
